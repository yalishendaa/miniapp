/* eslint-disable @typescript-eslint/no-explicit-any */
import { useEffect, useState } from "react";

export type FarcasterUser = {
  fid: string;
  displayName: string;
  pfpUrl: string;
};

// –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è pfp, –µ—Å–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ–±—ä–µ–∫—Ç
function normalizePfp(raw: any): string {
  if (!raw) return "";
  if (typeof raw === "string") return raw;
  if (typeof raw === "object" && raw.url && typeof raw.url === "string") {
    return raw.url;
  }
  return "";
}

// —ç—Ç–æ—Ç —Ö—É–∫ –¥–µ–ª–∞–µ—Ç –¥–≤–µ –≤–µ—â–∏:
// 1. –≤–Ω—É—Ç—Ä–∏ Farcaster: –¥–µ—Ä–≥–∞–µ—Ç sdk.actions.ready() –∏ –ø–æ–ª—É—á–∞–µ—Ç user
// 2. –≤–Ω–µ Farcaster (–±—Ä–∞—É–∑–µ—Ä): –Ω–µ –ø–∞–¥–∞–µ—Ç, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Guest User
export function useFarcasterUser() {
  const [userData, setUserData] = useState<FarcasterUser>({
    fid: "0",
    displayName: "Guest User",
    pfpUrl: "",
  });

  useEffect(() => {
    let active = true;

    async function init() {
      try {
        const sdkModule: any = await import("@farcaster/miniapp-sdk");
        const sdk: any = sdkModule.default || sdkModule;

        // üëá –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è Farcaster mini-app
        await sdk.actions.ready();

        const u: any = sdk?.context?.user;

        if (!active) return;

        setUserData({
          fid: u?.fid ? String(u.fid) : "0",
          displayName: u?.displayName || "Guest User",
          pfpUrl: normalizePfp(u?.pfpUrl),
        });
      } catch {
        // –ú—ã –Ω–µ –≤ Farcaster ‚Üí –ø—Ä–æ—Å—Ç–æ –≥–æ—Å—Ç—å
        if (!active) return;
        setUserData({
          fid: "0",
          displayName: "Guest User",
          pfpUrl: "",
        });
      }
    }

    init();

    return () => {
      active = false;
    };
  }, []);

  return userData;
}
